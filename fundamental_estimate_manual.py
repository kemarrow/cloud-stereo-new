# -*- coding: utf-8 -*-
"""
Created on Sun Feb  6 20:31:29 2022

@author: kathe
"""

import numpy as np
import cv2 
import matplotlib.pyplot as plt
import matplotlib.path as mpltPath
import tqdm
import pyproj
from haversine import haversine
from scipy.spatial.transform import Rotation as R
import pickle


ptsR = np.array([(637.4916317991632, 277.8765690376569),
 (637.4916317991632, 292.60460251046027),
 (634.8138075313807, 306.663179916318),
 (593.3075313807531, 218.29497907949792),
 (527.7008368200836, 265.826359832636),
 (593.9769874476988, 50.26150627615061),
 (413.8933054393305, 85.07322175732219),
 (218.4121338912134, 287.2489539748954),
 (214.39539748953973, 247.75104602510464),
 (251.8849372384937, 35.53347280334731),
 (309.4581589958159, 87.75104602510464),
 (444.0188284518828, 401.72594142259413),
 (243.18200836820083, 394.3619246861925),
 (381.7594142259414, 421.14016736401675),
 (267.95188284518827, 434.52928870292885),
 (176.90585774058576, 440.55439330543936),
 (165.52510460251045, 436.5376569037657),
 (26.278242677824267, 405.0732217573222),
 (613.3912133891213, 36.20292887029291),
 (375.73430962343093, 214.94769874476987),
 (398.49581589958154, 363.56694560669456),
 (561.1736401673639, 433.85983263598325),
 (470.7970711297071, 433.19037656903765),
 (385.77615062761504, 300.6380753138075),
 (531.7175732217573, 214.94769874476987),
 (484.1861924686192, 16.788702928870293),
 (628.7887029288703, 310.6799163179916),
 (186.27824267782427, 441.22384937238496),
 (105.94351464435147, 441.22384937238496),
 (131.3828451882845, 450.59623430962347),
 (213.72594142259413, 303.31589958159),
 (508.95606694560666, 402.39539748953973),
 (466.78033472803344, 443.23221757322176),
 (535.7343096234309, 355.5334728033473),
 (204.35355648535563, 427.1652719665272),
 (53.05648535564853, 426.4958158995816),
 (34.98117154811715, 347.5),
 (511.6338912133891, 364.23640167364016),
 (552.4707112970711, 441.22384937238496),
 (214.39539748953973, 303.31589958159),
 (196.98953974895397, 167.4163179916318),
 (415.23221757322176, 148.00209205020923),
 (571.215481171548, 124.57112970711296),
 (360.33682008368197, 20.805439330544004),
 (565.8598326359833, 58.29497907949792),
 (614.0606694560669, 265.1569037656904),
 (167.53347280334728, 99.80125523012555),
 (170.2112970711297, 374.27824267782427),
 (39.6673640167364, 205.57531380753142),
 (616.0690376569038, 21.474895397489604),
 (616.0690376569038, 194.1945606694561),
 (549.7928870292886, 245.0732217573222),
 (411.8849372384937, 257.1234309623431),
 (405.85983263598325, 183.4832635983264),
 (393.14016736401675, 196.2029288702929),
 (346.27824267782427, 211.60041841004187),
 (238.49581589958157, 273.19037656903765),
 (232.47071129707112, 232.35355648535568),
 (324.18619246861925, 70.34518828451883),
 (27.61715481171548, 69.67573221757323),
 (69.79288702928869, 28.8389121338912),
 (120.0020920502092, 38.880753138075306),
 (136.06903765690376, 226.99790794979083),
 (568.5376569037657, 158.71338912133893),
 (484.1861924686192, 132.60460251046027),
 (429.96025104602506, 253.10669456066944),
 (396.48744769874475, 220.97280334728032),
 (380.4205020920502, 311.3493723849372),
 (239.8347280334728, 58.96443514644352)])
 # (354.3117154811715, 308.6715481171548),
 # (379.7510460251046, 188.8389121338912),
 # (319.5, 150.01046025104603),
 # (203.68410041841003, 290.59623430962347),
 # (224.43723849372384, 222.98117154811717),
 # (167.53347280334728, 171.43305439330544),
 # (161.5083682008368, 174.7803347280335),
 # (151.46652719665272, 149.34100418410043),
 # (115.98535564853556, 145.99372384937237),
 # (53.72594142259414, 194.1945606694561)])
                
                
ptsL = np.array([(632.8054393305439, 267.8347280334728),
 (631.4665271966527, 281.89330543933056),
 (628.1192468619247, 295.95188284518827),
 (589.9602510460251, 208.2531380753138),
 (525.0230125523012, 254.4456066945607),
 (597.9937238493724, 39.550209205020906),
 (417.91004184100416, 72.35355648535568),
 (220.42050209205019, 272.52092050209205),
 (215.73430962343096, 231.68410041841003),
 (254.56276150627613, 18.127615062761492),
 (311.4665271966527, 73.02301255230128),
 (624.7719665271966, 439.2154811715481),
 (415.23221757322176, 427.1652719665272),
 (565.1903765690377, 457.29079497907946),
 (454.06066945606693, 470.6799163179916),
 (213.05648535564853, 429.17364016736406),
 (202.34518828451883, 426.4958158995816),
 (184.26987447698744, 429.17364016736406),
 (617.407949790795, 25.4916317991632),
 (377.07322175732213, 202.22803347280336),
 (401.173640167364, 350.1778242677824),
 (555.8179916317991, 418.46234309623435),
 (467.44979079497904, 417.1234309623431),
 (393.14016736401675, 289.2573221757322),
 (541.7594142259414, 206.91422594142261),
 (509.62552301255226, 8.755230125522985),
 (631.4665271966527, 300.6380753138075),
 (190.96443514644352, 421.80962343096235),
 (111.96861924686192, 419.80125523012555),
 (136.73849372384936, 429.84309623430966),
 (223.09832635983264, 289.9267782426778),
 (505.6087866108786, 387.6673640167364),
 (462.0941422594142, 426.4958158995816),
 (535.7343096234309, 343.4832635983264),
 (209.03974895397488, 408.42050209205024),
 (60.42050209205021, 407.081589958159),
 (44.35355648535565, 330.09414225941424),
 (510.9644351464435, 352.18619246861925),
 (548.4539748953974, 424.48744769874475),
 (223.09832635983264, 289.9267782426778),
 (211.7175732217573, 155.36610878661088),
 (429.96025104602506, 139.29916317991632),
 (584.6046025104603, 117.8765690376569),
 (382.42887029288704, 10.763598326359897),
 (588.6213389121339, 52.939330543933124),
 (619.4163179916318, 256.4539748953975),
 (184.93933054393304, 87.75104602510464),
 (176.23640167364016, 357.5418410041841),
 (53.05648535564853, 191.51673640167365),
 (622.0941422594142, 12.102510460251096),
 (614.0606694560669, 186.8305439330544),
 (547.1150627615062, 235.70083682008368),
 (411.2154811715481, 245.7426778242678),
 (406.52928870292885, 172.7719665271967),
 (394.47907949790795, 185.4916317991632),
 (347.61715481171547, 199.5502092050209),
 (239.8347280334728, 259.13179916317995),
 (235.14853556485355, 219.63389121338912),
 (326.19456066945605, 55.61715481171552),
 (26.947698744769873, 48.92259414225941),
 (69.1234309623431, 8.085774058577385),
 (120.6715481171548, 18.797071129707092),
 (138.0774058577406, 210.93096234309627),
 (568.5376569037657, 148.00209205020923),
 (485.52510460251045, 121.22384937238496),
 (428.62133891213387, 240.38702928870293),
 (395.81799163179915, 208.9225941422594),
 (378.4121338912134, 296.6213389121339),
 (243.18200836820083, 41.55857740585782)])
 # (353.6422594142259, 292.60460251046027),
 # (382.42887029288704, 174.7803347280335),
 # (322.847280334728, 135.28242677824267),
 # (205.69246861924685, 273.19037656903765),
 # (227.11506276150627, 206.91422594142261),
 # (170.8807531380753, 153.35774058577408),
 # (162.84728033472803, 156.70502092050208),
 # (153.47489539748955, 130.59623430962347),
 # (117.99372384937237, 126.57949790794981),
 # (55.73430962343096, 174.1108786610879)])

CamM_left = np.array([[5.520688775958645920e+02,0.000000000000000000e+00,3.225866125962970159e+02],
          [0.000000000000000000e+00,5.502640890663026312e+02,2.362389385357402034e+02],
          [0.000000000000000000e+00,0.000000000000000000e+00,1.000000000000000000e+00]])

CamM_left_ronnie = np.array([[5.084752337001038995e+02,0.000000000000000000e+00, 3.225185456035997049e+02],
                             [0.000000000000000000e+00,5.084752337001038995e+02,2.505901000840876520e+02],
                             [0.000000000000000000e+00,0.000000000000000000e+00,1.000000000000000000e+00]])

distort = np.array([2.808374038768443048e-01,-9.909134707088265159e-01,6.299531255281858727e-04,-1.301770463801651002e-03,1.093982545460403522e+00])

translation_vector = np.array([-59.29974976947545, -16.,   0.])

#Ronnie's instrinsic camera parameters (in px)
f = 5.084752337001038995e+02
c_x = 3.225185456035997049e+02
c_y = 2.505901000840876520e+02


w,h = 640,480
    
starsL = np.array([(632.8054393305439, 267.8347280334728),
 (631.4665271966527, 281.89330543933056),
 (628.7887029288703, 295.95188284518827),
 (589.9602510460251, 208.2531380753138),
 (524.3535564853556, 254.4456066945607),
 (597.9937238493724, 40.219665271966505),
 (618.7468619246862, 25.4916317991632),
 (454.73012552301253, 137.96025104602512),
 (417.91004184100416, 71.68410041841008),
 (391.8012552301255, 262.47907949790795),
 (389.1234309623431, 189.50836820083686),
 (377.07322175732213, 201.55857740585776),
 (330.2112970711297, 214.94769874476987),
 (312.1359832635983, 73.02301255230128),
 (254.56276150627613, 18.127615062761492),
 (219.75104602510459, 272.52092050209205),
 (215.73430962343096, 232.35355648535568),
 (330.2112970711297, 214.94769874476987)])

starsR = np.array([(638.1610878661088, 278.5460251046025),
 (637.4916317991632, 292.60460251046027),
 (634.8138075313807, 306.663179916318),
 (592.6380753138075, 217.62552301255232),
 (527.7008368200836, 265.826359832636),
 (593.9769874476988, 50.26150627615061),
 (614.0606694560669, 36.87238493723851),
 (452.72175732217573, 149.34100418410043),
 (414.56276150627616, 85.07322175732219),
 (393.14016736401675, 275.1987447698745),
 (388.4539748953975, 202.89748953974896),
 (375.73430962343093, 214.27824267782427),
 (330.2112970711297, 227.66736401673643),
 (308.7887029288703, 87.75104602510464),
 (251.8849372384937, 35.53347280334731),
 (218.4121338912134, 287.2489539748954),
 (214.39539748953973, 247.081589958159),
 (329.5418410041841, 226.99790794979083)])


R_ronnie = np.array([[ 0.99988914,0.01471834, 0.00224488], 
                     [-0.01477408,  0.99951947, 0.02724975],
                     [-0.00184273, -0.02727989, 0.99962616]])

T_ronnie = np.array([-52.1222311, -14.0858871, -0.92779816])

Rleft_ronnie = np.array([[ 0.9904186, -0.04264348, -0.13134906], 
                         [ 0.13727167, 0.40789312 , 0.90265155],
                         [ 0.01508419, -0.9120333, 0.40983865]])

Rright_ronnie = np.array([[ 0.9893863, -0.06083473,-0.1319617 ],
                          [ 0.14528628 , 0.4302662, 0.89093363],
                          [ 0.00257894,-0.9006498, 0.43453792]])



newcameramtx, roi = cv2.getOptimalNewCameraMatrix(
    CamM_left, distort, (w, h), 1, (w, h))

fundamental_matrix, inlier_mask = cv2.findFundamentalMat(ptsL, ptsR, cv2.FM_RANSAC, 3)
essential_matrix, inlier_mask = cv2.findEssentialMat(ptsL, ptsR, cameraMatrix=newcameramtx)

relDirs = np.rad2deg(cv2.Rodrigues(cv2.decomposeEssentialMat(essential_matrix)[0])[0])

pose = cv2.recoverPose(essential_matrix, ptsL, ptsR, newcameramtx)
relDirs2 = np.rad2deg(cv2.Rodrigues(pose[1])[0])

inter_cam_dist = np.sqrt(np.sum(translation_vector**2))
T = pose[2]*inter_cam_dist

Rleft, Rright, Pleft, Pright, Q, roi_left, roi_right = cv2.stereoRectify(
    newcameramtx, distort,
    newcameramtx, distort,
    imageSize=(w,h),
    R=pose[1],
    T=pose[2]*inter_cam_dist,
    flags= cv2.CALIB_ZERO_DISPARITY)

success, Hleft, Hright = cv2.stereoRectifyUncalibrated(
    np.float32(ptsL), np.float32(ptsR),
    fundamental_matrix, imgSize=(w, h)
    )

Pleft_ronnie = np.array([[5.084752337001038995e+02, 0.0, 3.225185456035997049e+02, 0.0],
                        [0.0, 5.111127135158413921e+02,  2.505901000840876520e+02, 0.0],
                        [0.0,           0.0,             1.0,                      0.0]])

Pright_ronnie = np.array([[5.084752337001038995e+02, 0.0, 3.225185456035997049e+02, -2.80317085e+04],
                        [0.0, 5.111127135158413921e+02,  2.505901000840876520e+02, 0.0],
                        [0.0,           0.0,             1.0,                      0.0]])

stereo_cal = {'F': fundamental_matrix,
              'E': essential_matrix,
              'R': R_ronnie,
              'T': T_ronnie,
              'Rleft': Rleft_ronnie,
              'Rright': Rright_ronnie,
              'Pleft': Pleft_ronnie,
              'Pright': Pright_ronnie,
              'Q': Q,
              'Hleft': Hleft,
              'Hright': Hright,
              'roi_left': roi_left,
              'roi_right': roi_right}

with open('stereo_cal_mat.pkl', 'wb') as f:
    pickle.dump(stereo_cal, f)
    
